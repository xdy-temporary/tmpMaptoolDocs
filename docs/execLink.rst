=====================
execLink - MapToolDoc
=====================

.. contents::
   :depth: 3
..

.. container:: noprint
   :name: mw-page-base

.. container:: noprint
   :name: mw-head-base

.. container:: mw-body
   :name: content

   .. container:: mw-indicators

   .. rubric:: execLink
      :name: firstHeading
      :class: firstHeading

   .. container:: mw-body-content
      :name: bodyContent

      .. container::
         :name: siteSub

         From MapToolDoc

      .. container::
         :name: contentSub

      .. container:: mw-jump
         :name: jump-to-nav

         Jump to: `navigation <#mw-head>`__, `search <#p-search>`__

      .. container:: mw-content-ltr
         :name: mw-content-text

         .. container:: toc
            :name: toc

            .. container::
               :name: toctitle

               .. rubric:: Contents
                  :name: contents

            -  `1 execLink() Function <#execLink.28.29_Function>`__

               -  `1.1 Usage <#Usage>`__
               -  `1.2 Examples <#Examples>`__
               -  `1.3 See Also <#See_Also>`__

         .. rubric:: execLink() Function
            :name: execlink-function

         .. container::

             Note: This function can only be used in a `Trusted
            Macro <Trusted_Macro>`__

         .. container:: template_version

            • **Introduced in version 1.3b55**

         .. container:: template_description

            Executes a macro link that was created with
            `macroLinkText() <macroLinkText>`__, output
            generated by the link is sent to players using the standard
            `macroLinkText() <macroLinkText>`__ logic.
            **execLink()** allows you to defer the running of the link
            until after the currently running macro has ended in which
            case the output will be displayed after any output generated
            by the current macro. If you defer a series of links, they
            will be queued in order and executed after the currently
            running macro. There is no software limit to the amount of
            links you can queue, but your hardware will impose its own
            limitations. If the execution of the link is not defered
            then any output generated will appear *before* any output
            generated by the current macro. You can use this function to
            update values in a token copied with
            `copyToken() <copyToken>`__ using the defered
            option. You can also use this function to send output
            selectivly to a list of players from the current macro, or
            to generate output that is not suppressed when the
            `abort() <abort>`__ function is called.

         .. rubric:: Usage
            :name: usage

         .. container:: mw-geshi mw-code mw-content-ltr

            .. container:: mtmacro source-mtmacro

               #. .. code-block:: none

                     execLink(link)

         .. container:: mw-geshi mw-code mw-content-ltr

            .. container:: mtmacro source-mtmacro

               #. .. code-block:: none

                     execLink(link, defer)

         **Parameters**

         -  ``link`` - The link to "execute".
         -  ``defer`` - Executes the link after the current macro has
            completed if non zero, defaults to zero.

         .. rubric:: Examples
            :name: examples

         .. container:: template_examples

            Execute a macro link immediatly (any output wil appear
            before the current macros output)

            .. container:: mw-geshi mw-code mw-content-ltr

               .. container:: mtmacro source-mtmacro

                  #. .. code-block:: none

                        [h: link = macroLinkText("Test@Lib:Test", "self")]

                  #. .. code-block:: none

                        [h: execLink(link)]

            Execute a macro link after the execution of the current
            macro (any output will appear before the current macros
            output)

            .. container:: mw-geshi mw-code mw-content-ltr

               .. container:: mtmacro source-mtmacro

                  #. .. code-block:: none

                        [h: link = macroLinkText("Test@Lib:Test", "self")]

                  #. .. code-block:: none

                        [h: execLink(link, 1)]

            Copy a token and update its values.

            .. container:: mw-geshi mw-code mw-content-ltr

               .. container:: mtmacro source-mtmacro

                  #. .. code-block:: none

                        [h: newToken = copyToken("Hero")]

                  #. .. code-block:: none

                        [h: link = macroLinkText("update@Lib:GM", "none", "", newToken)]

                  #. .. code-block:: none

                        [h: execLink(link)]

         .. rubric:: See Also
            :name: see-also

         .. container:: template_also

            `macroLinkText() <macroLinkText>`__
            `macroLink() <macroLink>`__
            `copyToken() <copyToken>`__

      .. container:: printfooter

         Retrieved from
         "http://lmwcs.com/maptool/index.php?title=execLink&oldid=3134"

