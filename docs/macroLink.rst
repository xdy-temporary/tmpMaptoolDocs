======================
macroLink - MapToolDoc
======================

.. contents::
   :depth: 3
..

.. container:: noprint
   :name: mw-page-base

.. container:: noprint
   :name: mw-head-base

.. container:: mw-body
   :name: content

   .. container:: mw-indicators

   .. rubric:: macroLink
      :name: firstHeading
      :class: firstHeading

   .. container:: mw-body-content
      :name: bodyContent

      .. container::
         :name: siteSub

         From MapToolDoc

      .. container::
         :name: contentSub

      .. container:: mw-jump
         :name: jump-to-nav

         Jump to: `navigation <#mw-head>`__, `search <#p-search>`__

      .. container:: mw-content-ltr
         :name: mw-content-text

         .. container:: toc
            :name: toc

            .. container::
               :name: toctitle

               .. rubric:: Contents
                  :name: contents

            -  `1 macroLink() Function <#macroLink.28.29_Function>`__

               -  `1.1 Usage <#Usage>`__
               -  `1.2 Examples <#Examples>`__
               -  `1.3 See Also <#See_Also>`__
               -  `1.4 Version Changes <#Version_Changes>`__

         .. rubric:: macroLink() Function
            :name: macrolink-function

         .. container:: template_version

            • **Introduced in version 1.3b48**

         .. container:: template_description

            Creates the HTML for a link which will run the specified
            macro when clicked on in a
            `frame </rptools/wiki/frame_(roll_option)>`__,
            `dialog </rptools/wiki/dialog_(roll_option)>`__, or the chat
            window. Additionally, if you send the link to the chat
            window, it will automatically be executed by any recipients
            as soon as they receive it. This can be useful for popping
            up or updating
            `frames </rptools/wiki/frame_(roll_option)>`__ or
            `dialogs </rptools/wiki/dialog_(roll_option)>`__ for your
            players. To auto-execute in the chat window, it must not be
            hidden by roll options like
            `[h:] </rptools/wiki/h_(roll_option)>`__, but may be hidden
            by being contained within an HTML comment.
            **Some notes on the auto execution**

            -  If you refer to a macro on a lib:token it will
               automatically execute, however if you refer to a macro on
               the campaign panel, the macro is NOT automatically
               executed when sent to the chat.
            -  It will also not work if the owner of the lib:token is
               not an (online) GM, though as a general practice its best
               not to set ownership of lib:tokens at all.
            -  To prevent the macro from automatically executing you can
               turn off the 'auto execute' in the edit panel of the
               macro that you're linking to.

             

         .. rubric:: Usage
            :name: usage

         .. container:: mw-geshi mw-code mw-content-ltr

            .. container:: mtmacro source-mtmacro

               #. .. code-block:: none

                     macroLink(text, macroName)

         .. container:: mw-geshi mw-code mw-content-ltr

            .. container:: mtmacro source-mtmacro

               #. .. code-block:: none

                     macroLink(text, macroName, output)

         .. container:: mw-geshi mw-code mw-content-ltr

            .. container:: mtmacro source-mtmacro

               #. .. code-block:: none

                     macroLink(text, macroName, output, args)

         .. container:: mw-geshi mw-code mw-content-ltr

            .. container:: mtmacro source-mtmacro

               #. .. code-block:: none

                     macroLink(text, macroName, output, args, target)

         The string generated by the ``macroLink()`` function follows
         this format:

         .. container:: mw-geshi mw-code mw-content-ltr

            .. container:: html4strict source-html4strict

               .. code-block:: none

                  <a href="macro://macroName/output/target?args">text</a>

         **Parameters**

         -  ``text`` - is the text to display for the link.
         -  ``macroName`` - is the name of the macro to run when the
            link is clicked. The ``macroName`` is in the same format
            that is used for `[macro(...):
            ...] </rptools/wiki/Macros:Branching_and_Looping#MACRO_Option>`__
            e.g. ``Test@Lib:test``.
         -  ``output`` - contains who the output of the macro should go
            to, values are (defaults to ``"none"``):

            -  ``"self"`` - Display only to person who clicked on the
               link.
            -  ``"gm"`` - Display to GM.
            -  ``"all"`` - everyone (acts like a
               `/say </maptool/index.php?title=SlashCommands:say&action=edit&redlink=1>`__).
            -  ``"none"`` - discard any output.
            -  ``"gm-self"`` - Display to GM and the person executing
               the link.
            -  ``"list"`` - Displays to a list of players. When the
               ``output`` is set to ``"list"`` then the macro link
               expects the ``args`` parameter to be a `JSON
               Object </rptools/wiki/JSON_Object>`__, that contains a
               field called ``mlOutputList`` which is a `JSON
               Array </rptools/wiki/JSON_Array>`__ containing the
               players to send the output to.

         -  ``args`` - Any arguments to be passed to the macro when it
            is called.
         -  ``target`` - Which tokens to run the macro on. Target can be
            one or more of the following separated by commas (defaults
            to ``"impersonated"``):

            -  ``"impersonated"`` - the impersonated
               `Token </rptools/wiki/Token>`__.
            -  ``"selected"`` - the selected
               `Tokens </rptools/wiki/Token>`__.
            -  ``"Token Id"`` - the
               `id </maptool/index.php?title=Token:Token_Id&action=edit&redlink=1>`__
               of a `Token </rptools/wiki/Token>`__.

         .. rubric:: Examples
            :name: examples

         .. container:: template_examples

            \* To create a link that will call a macro called ``Test``
            on the `Library Token </rptools/wiki/Token:library_token>`__
            named ``Lib:Test`` that says "*Click on me!*" and displays
            the output to the GM.

            .. container:: mw-geshi mw-code mw-content-ltr

               .. container:: mtmacro source-mtmacro

                  .. code-block:: none

                     [r: macroLink("Click on me!", "Test@Lib:Test", "gm", "count=6", "impersonated")]

            produces this output:

            .. container:: mw-geshi mw-code mw-content-ltr

               .. container:: html4strict source-html4strict

                  .. code-block:: none

                     <a href="macro://Test@Lib:Test/gm/impersonated?count=6;">Click on me!</a>

            -  Sending to multiple players and the GM in 1.3b55

            .. container:: mw-geshi mw-code mw-content-ltr

               .. container:: mtmacro source-mtmacro

                  #. .. code-block:: none

                        [h: outputTo = '["Fred", "Barney", "gm"]']

                  #. .. code-block:: none

                        [h: args = json.set("{}", "mlOutputList", outputTo)]

                  #. .. code-block:: none

                        [r: macroLink("Click on me!", "Test@Lib:Test", "list", args)]

            -  Updating a character sheet
               `frame </rptools/wiki/frame_(roll_option)>`__ without
               displaying the link:

            .. container:: mw-geshi mw-code mw-content-ltr

               .. container:: mtmacro source-mtmacro

                  .. code-block:: none

                     Took 4 points of damage.<!-- [r: macroLink("Update Character Sheet", "Update Character Sheet@Lib:Test")] -->

            -  An example of a longer custom macrolink:

            This is a link that is user created to send several
            variables to the AttackMacro. Each variable must be
            separated by a ``&`` sign. Spaces within text must be
            replaced with a ``+`` sign. Plus sign can't be sent, you
            might want to use the html code for plus sign (``&27;``)
            instead of ``+``.

            .. container:: mw-geshi mw-code mw-content-ltr

               .. container:: html4strict source-html4strict

                  .. code-block:: none

                     <a href="macro://AttackMacro@Lib:Test/all/impersonated?Count=6&DiceToRoll=1d6plus4&Text=Hello+there+Im+attacking+you;">Click me</a>

            **How to call a macro on a non-library token**

            You can call macros on usual tokens by using ``@TOKEN`` in
            the macro name. You have to specify the token with the macro
            as target token. The usual limits of ownership and trust
            should be expected here too.

            This line would call macro ``B`` on token ``Hero``:

            .. container:: mw-geshi mw-code mw-content-ltr

               .. container:: mtmacro source-mtmacro

                  .. code-block:: none

                     [r: macroLink("Click me!", "B@TOKEN", "all", "", findToken("Hero"))]

         .. rubric:: See Also
            :name: see-also

         .. container:: template_also

            `macroLinkText() </rptools/wiki/macroLinkText>`__

         .. rubric:: Version Changes
            :name: version-changes

         .. container:: template_changes

            -  **1.3b55** - Added ``gm-self`` and ``list`` output
               options.
            -  **1.3b56** - Links created using this function will no
               longer show a tooltip when displayed in a dialog or
               frame.

      .. container:: printfooter

         Retrieved from
         "http://lmwcs.com/maptool/index.php?title=macroLink&oldid=7162"

