.. contents::
   :depth: 3
..

.. raw:: mediawiki

   {{MacroFunction
   |name=macroLink
   |version=1.3b48
   |description=
   Creates the HTML for a link which will run the specified macro when clicked on in a [[frame_(roll_option)|frame]], [[dialog_(roll_option)|dialog]], or the chat window.  Additionally, if you send the link to the chat window, it will automatically be executed by any recipients as soon as they receive it.  This can be useful for popping up or updating [[frame_(roll_option)|frames]] or [[dialog_(roll_option)|dialogs]] for your players.  To auto-execute in the chat window, it must not be hidden by roll options like {{roll|h}}, but may be hidden by being contained within an HTML comment.<br/>
   '''Some notes on the auto execution'''
   *If you refer to a macro on a lib:token it will automatically execute, however if you refer to a macro on the campaign panel, the macro is NOT automatically executed when sent to the chat. 
   *It will also not work if the owner of the lib:token is not an (online) GM, though as a general practice its best not to set ownership of lib:tokens at all.
   *To prevent the macro from automatically executing you can turn off the 'auto execute' in the edit panel of the macro that you're linking to.
   Â 

   |usage=
   <source lang="mtmacro" line>
   macroLink(text, macroName)
   </source>
   <source lang="mtmacro" line>
   macroLink(text, macroName, output)
   </source>
   <source lang="mtmacro" line>
   macroLink(text, macroName, output, args)
   </source>
   <source lang="mtmacro" line>
   macroLink(text, macroName, output, args, target)
   </source>
   <br/>The string generated by the {{code|macroLink()}} function follows this format:<source lang="html4strict">
   <a href="macro://macroName/output/target?args">text</a>
   </source>
   '''Parameters'''
   {{param|text|is the text to display for the link.}}
   {{param|macroName|is the name of the macro to run when the link is clicked. The {{code|macroName}} is in the same format that is used for [[Macros:Branching_and_Looping#MACRO_Option|[macro(...): ...]]]  e.g. {{code|Test@Lib:test}}.}}
   {{param|output|contains who the output of the macro should go to, values are (defaults to {{code|"none"}}):}}
   ** {{code|"self"}} - Display only to person who clicked on the link.
   ** {{code|"gm"}} - Display to GM.
   ** {{code|"all"}} - everyone (acts like a [[SlashCommands:say|/say]]).
   ** {{code|"none"}} - discard any output.
   ** {{code|"gm-self"}} - Display to GM and the person executing the link.
   ** {{code|"list"}} - Displays to a list of players. When the {{code|output}} is set to {{code|"list"}} then the macro link expects the {{code|args}} parameter to be a [[JSON_Object|JSON Object]], that contains a field called {{code|mlOutputList}} which is a [[JSON_Array|JSON Array]] containing the players to send the output to.
   {{param|args|Any arguments to be passed to the macro when it is called.}}
   {{param|target|Which tokens to run the macro on. Target can be one or more of the following separated by commas (defaults to {{code|"impersonated"}}):}}
   ** {{code|"impersonated"}} - the impersonated [[Token|Token]].
   ** {{code|"selected"}} - the selected [[Token|Token]]s.
   ** {{code|"[[Token:Token_Id|Token Id]]"}} - the ''[[Token:Token_Id|id]]'' of a [[Token|Token]].

   |examples=
   * To create a link that will call a macro called {{code|Test}} on the [[Token:library_token|Library Token]] named {{code|Lib:Test}} that says "''Click on me!''" and displays the output to the GM.
   <source lang="mtmacro">
   [r: macroLink("Click on me!", "Test@Lib:Test", "gm", "count=6", "impersonated")]
   </source><br/>
   produces this output:<source lang="html4strict"><a href="macro://Test@Lib:Test/gm/impersonated?count=6;">Click on me!</a></source><br/>
   * Sending to multiple players and the GM in 1.3b55
   <source lang="mtmacro" line>
   [h: outputTo = '["Fred", "Barney", "gm"]']
   [h: args = json.set("{}", "mlOutputList", outputTo)]
   [r: macroLink("Click on me!", "Test@Lib:Test", "list", args)]
   </source><br/>
   * Updating a character sheet [[frame_(roll_option)|frame]] without displaying the link:
   <source lang="mtmacro">
   Took 4 points of damage.<!-- [r: macroLink("Update Character Sheet", "Update Character Sheet@Lib:Test")] -->
   </source><br/>
   * An example of a longer custom macrolink:
   This is a link that is user created to send several variables to the AttackMacro. Each variable must be separated by a {{code|&}} sign. Spaces within text must be replaced with a {{code|+}} sign. Plus sign can't be sent, you might want to use the html code for plus sign ({{code|&27;}}) instead of {{code|+}}.
   <source lang="html4strict"><a href="macro://AttackMacro@Lib:Test/all/impersonated?Count=6&DiceToRoll=1d6plus4&Text=Hello+there+Im+attacking+you;">Click me</a></source>

   '''How to call a macro on a non-library token'''

   You can call macros on usual tokens by using {{code|@TOKEN}} in the macro name. You have to specify the token with the macro as target token. The usual limits of ownership and trust should be expected here too.

   This line would call macro {{code|B}} on token {{code|Hero}}:

   <source lang="mtmacro">
   [r: macroLink("Click me!", "B@TOKEN", "all", "", findToken("Hero"))]
   </source>

   |also=
   {{func|macroLinkText}}

   |changes=
   {{change|1.3b55|Added {{code|gm-self}} and {{code|list}} output options.}}
   {{change|1.3b56|Links created using this function will no longer show a tooltip when displayed in a dialog or frame.}}
   }}

`Category:Miscellaneous Function <Category:Miscellaneous_Function>`__
